plugins {
	id "application"
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id "com.github.node-gradle.node" version "3.0.0-rc7"
	id 'java'
}

apply plugin : "java"
apply plugin: 'com.github.node-gradle.node'

ext {
    javaMainClass = "com.rankerapp.RankerappApplication"
}

application {
    mainClassName = javaMainClass
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'javax.inject:javax.inject:1'
	implementation('org.springframework.boot:spring-boot-starter') {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-web') {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
		exclude module: 'spring-boot-starter-logging'
	}
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.elasticsearch.client:elasticsearch-rest-high-level-client:6.2.3'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'com.amazonaws:aws-java-sdk-core:1.11.133'
	implementation 'com.amazonaws:aws-java-sdk-s3:1.11.133'

	runtimeOnly project(':webapp')
}

task copyWebApp(type: Copy) {
	from "$rootDir/webapp/build"
	into "$rootDir/build/resources/main/static/."
}

if (!project.hasProperty("skipFrontend")) {
	bootJar.dependsOn(copyWebApp)
	compileJava.dependsOn ":webapp:build"
}

clean.delete << file("${project.projectDir}/webapp/node_modules")


